on:
  push:
    branches: [ main ]

  # to run manually
  workflow_dispatch:

jobs:
  deploy:
    name: deploy
    runs-on: ubuntu-latest
    steps:
    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_IP }}
        username: ${{ secrets.SERVER_USER }}
        password: ${{ secrets.SERVER_PASS }}
        port: ${{ secrets.SERVER_PORT }}
        script: git clone https://github.com/OWASP/NodeGoat.git ; cd NodeGoat ; docker-compose build ; screen -A -m -d -S screen_1 docker-compose up

  OWASP_Dependency_Check:
    name: OWASP Dependency Check
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: OWASP Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        id: Depcheck
        with:
          project: 'prueba'
          path: '.'
          format: 'HTML'    
          args: >
            --failOnCVSS 7
            --enableRetired
            
      - name: Upload Test results
        uses: actions/upload-artifact@master
        with:
          name: Depcheck report
          path: ${{github.workspace}}/reports
          
  SonarCloud_Scan:
    needs: OWASP_Dependency_Check
    name: SonarCloud Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
         fetch-depth: 0
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args:
              -Dsonar.projectKey=marcositu_prueba
              -Dsonar.organization=marcositu
  CodeQL:
    needs: SonarCloud_Scan
    name: CodeQL
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript' ]

    steps:
        - name: Checkout repository
          uses: actions/checkout@v3

    # Initializes the CodeQL tools for scanning.
        - name: Initialize CodeQL
          uses: github/codeql-action/init@v2
          with:
            languages: ${{ matrix.language }}
        
    # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
    # If this step fails, then you should remove it and run the build manually (see below)
        - name: Autobuild
          uses: github/codeql-action/autobuild@v2

        - name: Perform CodeQL Analysis
          uses: github/codeql-action/analyze@v2

  ZAP_Scan:
    needs: deploy
    name: ZAP Scan
    runs-on: ubuntu-latest
    steps:
      - name: ZAP Scan
        uses: zaproxy/action-baseline@v0.5.0
        with:
          target: ${{ secrets.SERVER_WEB }}
          
  nuclei-scan:
    needs: ZAP_Scan
    name: Nuclei - DAST Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Nuclei - DAST Scan
        uses: projectdiscovery/nuclei-action@main
        with:
          target: ${{ secrets.SERVER_WEB }}
          flags: "-severity critical,high,medium,low -stats"

      - name: GitHub Workflow artifacts
        uses: actions/upload-artifact@v2
        with:
          path: ${{github.workspace}}/reports
          output: nuclei.txt

      - name: GitHub Security Dashboard Alerts update
        uses: github/codeql-action/upload-sarif@v2
          
  slack:
    needs: nuclei-scan
    name: Slack Notification
    runs-on: ubuntu-latest
    steps:
     - name: Slack Notification
       uses: rtCamp/action-slack-notify@v2
       env:
          SLACK_CHANNEL: bounty
          SLACK_ICON: https://github.com/rtCamp.png?size=48
          SLACK_MESSAGE: 'Corrio todo OK'
          SLACK_TITLE: 'TERMINO EL PIPELINE'
          SLACK_USERNAME: test
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
